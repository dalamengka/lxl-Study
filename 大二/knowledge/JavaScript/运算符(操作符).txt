第三章 运算符(操作符)
3.1 赋值运算符

3.1.1 简单赋值 var a = 10;

3.1.2 复合赋值 
如果在等号钱面加上+=*/,就可以完成复合赋值,+= -= *= /= <<= >>=,后两个不常用


3.2 一元运算符
指只能操作一个值的运算符,它包括很多,但最常用的就是递增和递减

3.2.1 使用方式
var a = 10;
a++;//a += 1;
console.log(a);//11

3.2.2 前置和后置区别
console.log(++a)和console.log(a++)
第一个打印的是++后的结果,第二个是原结果,但也++了

3.3 关系运算符
关系运算符,分别为< > <= >=,返回值都是布尔值


3.4 相等运算符
==(等于) ===(全等于) !=(不等于) !==(不全等于)返回的都是布尔值,相等和不相等,都是先转换数据类型再比较全等和不全等
仅比较不转换数据类型,需要注意的是,==不会比较数据类型,===会比较数据类型

3.5 条件运算符(三目/三元))
它允许将简单的if条件判断语句嵌入到表达式中

3.6 逻辑运算符
在运用逻辑运算符,需要掌握数据类型的知识,因为所有的逻辑操作符返回值都是布尔值,因此,返回值转换非常重要

3.6.1 逻辑非
逻辑非表示,首先会将后面的值转换为一个布尔值,然后再对其求相反:!i love you(我不爱你)

3.6.2 逻辑与
&左右两边只要有一个false,那就都是false,两边都是true,才是true

3.6.3 逻辑或 |
|左右两边只要有一个是true就是true,只有两边都是false才是false

3.6.4 短路与&&
它的运算过程更加高效,只要左边运算结果是false,那么就是false,后面的就不运算了

3.6.5 短路或||
它的运算过程更加高效,只要左边运算结果是true,那么就是true,后面的就不运算了